[PLIC-HAL] Allocated PLIC registers at 0x41000030000000 (size 4194304) -> ptr 0x7f700deb9010
[PLIC-HAL] Allocated PLIC registers at 0x41001130000000 (size 4194304) -> ptr 0x7f700dab8010
[PLIC-HAL] Allocated PLIC registers at 0x41000030400000 (size 4194304) -> ptr 0x7f700d6b7010
[PLIC-HAL] Allocated PLIC registers at 0x41001130400000 (size 4194304) -> ptr 0x7f700d2b6010
[PLIC-HAL] Allocated PLIC registers at 0x41000030800000 (size 4194304) -> ptr 0x7f700ceb5010
[PLIC-HAL] Allocated PLIC registers at 0x41001130800000 (size 4194304) -> ptr 0x7f700cab4010
[PLIC-HAL] Initializing PLIC instances...
[PLIC-HAL] Calling plic_init_for_this_hart(0)
[PLIC-HAL] Calling plic_init_for_this_hart(1)
[PLIC-HAL] Calling plic_init_for_this_hart(2)
[PLIC-HAL] Calling plic_init_for_this_hart(3)
[PLIC-HAL] Calling plic_init_for_this_hart(4)
[PLIC-HAL] Calling plic_init_for_this_hart(5)
[PLIC-HAL] Calling plic_init_for_this_hart(6)
[PLIC-HAL] Calling plic_init_for_this_hart(7)
[PLIC-HAL] Converting PLIC_INST hardware addresses to simulation pointers...
[PLIC-HAL]   PLIC_INST[0]: 0x41001130000000 -> (nil) (ERROR)
[PLIC-HAL]   Manual override: PLIC_INST[0] -> 0x7f700dab8010
[PLIC-HAL]   PLIC_INST[1]: 0x41001130400000 -> (nil) (ERROR)
[PLIC-HAL]   Manual override: PLIC_INST[1] -> 0x7f700d2b6010
[PLIC-HAL]   PLIC_INST[2]: 0x41001130800000 -> (nil) (ERROR)
[PLIC-HAL]   Manual override: PLIC_INST[2] -> 0x7f700cab4010
[Platform] Initialized PLIC interrupt statistics
[PLIC-HAL] Initialized PLIC instances for harts 0-7
[PLIC-HAL] PLIC_0: harts 0-1, PLIC_1: harts 2-7, PLIC_2: unused
[PLIC-HAL] Enabled interrupts: MESH_NODE, DMA512, GPIO, PIT, SPI1, RTC_ALARM for all harts
[Platform Setup] DMAC512 + PLIC Integration Complete
  - 8 tiles initialized with DMAC512 HAL handles
  - 8 tiles initialized with PLIC HAL (instances 0,1,2)
  - DMAC512 registers mapped to memory addresses
  - PLIC interrupts configured using original HAL functions

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;34mMesh‑NoC HAL Validation[0m                                                         ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[C0 Master] Starting tile processor threads...
[Task Queue] Initialized with 64 task slots
[C0 Master] Creating processor thread for tile 1...
[C0 Master] Creating processor thread for tile 2...
[Tile 1] Starting processor thread ...
[Tile 1] Processor thread initialized with interrupt support
[C0 Master] Creating processor thread for tile 3...
[Tile 2] Starting processor thread ...
[Tile 2] Processor thread initialized with interrupt support
[C0 Master] Creating processor thread for tile 4...
[Tile 3] Starting processor thread ...
[Tile 3] Processor thread initialized with interrupt support
[C0 Master] Creating processor thread for tile 5...
[Tile 4] Starting processor thread ...
[Tile 4] Processor thread initialized with interrupt support
[C0 Master] Creating processor thread for tile 6...
[Tile 5] Starting processor thread ...
[Tile 5] Processor thread initialized with interrupt support
[C0 Master] Creating processor thread for tile 7...
[Tile 6] Starting processor thread ...
[Tile 6] Processor thread initialized with interrupt support
[C0 Master] Waiting for tile threads to initialize...
[Tile 7] Starting processor thread ...
[Tile 7] Processor thread initialized with interrupt support
[C0 Master] All tile threads initialized successfully!
[C0 Master] Task coordination system ready
[C0 Master] Platform running with tile processors and task system!
[C0 Master] PLIC interrupt system ready (initialized in platform_setup)
[C0 Master] Supervising tile processors with interrupt handling...
[C0 Master] Supervision cycle 1: 7 processor tiles active, 7 idle, 0 tasks completed, 0 interrupts sent
[C0 Master] PLIC statistics available in platform.plic_stats
[C0 Master] Supervision cycle 2: 7 processor tiles active, 7 idle, 0 tasks completed, 0 interrupts sent
[C0 Master] PLIC statistics available in platform.plic_stats
[C0 Master] Supervision cycle 3: 7 processor tiles active, 7 idle, 0 tasks completed, 0 interrupts sent
[C0 Master] PLIC statistics available in platform.plic_stats
[C0 Master] Supervision cycle 4: 7 processor tiles active, 7 idle, 0 tasks completed, 0 interrupts sent
[C0 Master] PLIC statistics available in platform.plic_stats
[C0 Master] Supervision cycle 5: 7 processor tiles active, 7 idle, 0 tasks completed, 0 interrupts sent
[C0 Master] PLIC statistics available in platform.plic_stats
[C0 Master] Supervision complete
[C0 Master] Executing HAL tests...

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;36mRunning Tests: C0 Master + Distributed HAL[0m                                        ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[C0 Master] Executing C0 Master coordination tests...
[C0 Master] Executing C0 Gather with DMA monitoring...
[C0 Master] Starting C0 Gather...

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;36mC0-Gather(collect 8 DMEM to a continue DLM1)[0m                                      ║
╚═══════════════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m1. HAL transfer: dmem_0(0x10000000) -> node_0.dlm1+0(0x8000)[0m                        │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x10000000, dst=0x8000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x10000000 -> 0x8000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m2. HAL transfer: dmem_1(0x10400000) -> node_0.dlm1+256(0x8100)[0m                      │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x1112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x10400000, dst=0x8100, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x10400000 -> 0x8100 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x1112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m3. HAL transfer: dmem_2(0x10800000) -> node_0.dlm1+512(0x8200)[0m                      │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x10800000, dst=0x8200, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x10800000 -> 0x8200 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m4. HAL transfer: dmem_3(0x10c00000) -> node_0.dlm1+768(0x8300)[0m                      │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x10C00000, dst=0x8300, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x10c00000 -> 0x8300 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m5. HAL transfer: dmem_4(0x20000000) -> node_0.dlm1+1024(0x8400)[0m                     │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x20000000, dst=0x8400, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x20000000 -> 0x8400 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m6. HAL transfer: dmem_5(0x20400000) -> node_0.dlm1+1280(0x8500)[0m                     │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x15161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x20400000, dst=0x8500, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x20400000 -> 0x8500 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x15161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m7. HAL transfer: dmem_6(0x20800000) -> node_0.dlm1+1536(0x8600)[0m                     │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x20800000, dst=0x8600, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x20800000 -> 0x8600 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435 ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m8. HAL transfer: dmem_7(0x20c00000) -> node_0.dlm1+1792(0x8700)[0m                     │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x1718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x20C00000, dst=0x8700, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x20c00000 -> 0x8700 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0x1718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536 ...
HAL result: 256

[1m[C0-Gather] Summary: 8/8 passed[0m

[C0 Master] Checking for pending DMA transfers on Tile 0...
[C0 Master] C0 Gather completed. DMA transfers detected: 0, Result: PASS
[C0 Master] Executing C0 Distribute with DMA monitoring...
[C0 Master] Starting C0 Distribute...

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;36mC0-Distribute(same SRC --> diff. Dist)[0m                                            ║
╚═══════════════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m1. HAL transfer: node_0.dlm1(0x8000) -> dmem_0(0x10000000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x10000000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x10000000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m2. HAL transfer: node_0.dlm1(0x8000) -> dmem_1(0x10400000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x10400000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x10400000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m3. HAL transfer: node_0.dlm1(0x8000) -> dmem_2(0x10800000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x10800000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x10800000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m4. HAL transfer: node_0.dlm1(0x8000) -> dmem_3(0x10c00000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x10C00000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x10c00000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m5. HAL transfer: node_0.dlm1(0x8000) -> dmem_4(0x20000000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x20000000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x20000000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m6. HAL transfer: node_0.dlm1(0x8000) -> dmem_5(0x20400000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x20400000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x20400000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m7. HAL transfer: node_0.dlm1(0x8000) -> dmem_6(0x20800000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x20800000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x20800000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m8. HAL transfer: node_0.dlm1(0x8000) -> dmem_7(0x20c00000), size: 256[0m               │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x20C00000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x20c00000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

[1m[C0-Distribute] Summary: 8/8 passed[0m

[C0 Master] Checking for pending DMA transfers on Tile 0...
[C0 Master] C0 Distribute completed. DMA transfers detected: 0, Result: PASS

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mParallel C0 Access Test - C0 Main Thread Orchestrator[0m                             ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[C0-Orchestrator] Running on main C0 thread, coordinating tile threads directly
[C0-Orchestrator] Selecting two tiles for parallel C0 access test
[C0-Orchestrator] Tasks will use tile_to_c0_transfer_task which auto-detects tile ID
[C0-Orchestrator] Both transfers will target the same C0 destination simultaneously
[C0 Master] Created HAL test task 1: 'Parallel-C0-Transfer-A'
[C0 Master] Created HAL test task 2: 'Parallel-C0-Transfer-B'
[C0 Master] HAL test task 1 'Parallel-C0-Transfer-A' assigned to tile 1 (tile 0 reserved for C0 master)
[C0 Master] HAL test task 2 'Parallel-C0-Transfer-B' assigned to tile 2 (tile 0 reserved for C0 master)
[C0-Orchestrator] Queued parallel tasks to available tile threads (round-robin assignment)
[C0-Orchestrator] Waiting for tile threads to execute parallel transfers...
[Tile 1] Starting task 1 execution
=== [Tile 1] Starting Parallel-C0-Transfer-A - Print Session BEGIN ===
[Tile 1] Executing HAL test: Parallel-C0-Transfer-A
[HAL-FLOW] Tile 1: Test 'Parallel-C0-Transfer-A' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 1: Calling HAL test function for 'Parallel-C0-Transfer-A'
[Tile 1] Starting parallel transfer to C0...
[Tile 1] Source prepared with pattern 0x11
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 1 DMAC512 for remote transfer
[DMAC512-HAL] Tile 1: Configuring remote transfer (src=0x108000, dst=0x10002000, size=512)
[DMAC512-HAL] Tile 1: Starting remote transfer...
[DMAC512-POST-HAL] Tile 1: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 1: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 1: Transfer 0x108000 -> 0x10002000 (size=512)
[DMAC512-HW-SYNC] Tile 1: Memory copy completed successfully
[Device-DMAC512] Hart 1 completed DMA transfer 512 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 1: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 1: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 512
[Tile 1] Parallel transfer to C0 completed with result: 512
[HAL-RESULT] Tile 1: HAL test 'Parallel-C0-Transfer-A' returned result: 512
[Tile 1] HAL test 'Parallel-C0-Transfer-A' completed with result: PASS
[Tile 1] Task 1 completed with result: 512
=== [Tile 1] Parallel-C0-Transfer-A Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 1 completed task 1 -> asserting IRQ_MESH_NODE
[Tile 1] Completed task 1 (result=512)
[Tile 2] Starting task 2 execution
=== [Tile 2] Starting Parallel-C0-Transfer-B - Print Session BEGIN ===
[Tile 2] Executing HAL test: Parallel-C0-Transfer-B
[HAL-FLOW] Tile 2: Test 'Parallel-C0-Transfer-B' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 2: Calling HAL test function for 'Parallel-C0-Transfer-B'
[Tile 2] Starting parallel transfer to C0...
[Tile 2] Source prepared with pattern 0x12
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 2 DMAC512 for remote transfer
[DMAC512-HAL] Tile 2: Configuring remote transfer (src=0x208000, dst=0x10002000, size=512)
[DMAC512-HAL] Tile 2: Starting remote transfer...
[DMAC512-POST-HAL] Tile 2: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 2: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 2: Transfer 0x208000 -> 0x10002000 (size=512)
[DMAC512-HW-SYNC] Tile 2: Memory copy completed successfully
[Device-DMAC512] Hart 2 completed DMA transfer 512 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 2: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 2: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 512
[Tile 2] Parallel transfer to C0 completed with result: 512
[HAL-RESULT] Tile 2: HAL test 'Parallel-C0-Transfer-B' returned result: 512
[Tile 2] HAL test 'Parallel-C0-Transfer-B' completed with result: PASS
[Tile 2] Task 2 completed with result: 512
=== [Tile 2] Parallel-C0-Transfer-B Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 2 completed task 2 -> asserting IRQ_MESH_NODE
[Tile 2] Completed task 2 (result=512)
[C0-Orchestrator] Parallel transfers completed!
[C0-Orchestrator] Task A transfer result: 512
[C0-Orchestrator] Task B transfer result: 512
[C0-Orchestrator] Parallel C0 Access Test: PASS
[C0 Master] C0 Master tests completed:
[C0 Master] - C0 Gather: PASS
[C0 Master] - C0 Distribute: PASS
[C0 Master] - Parallel C0 Access: PASS

[C0 Master] Executing HAL tests in parallel across tile processors...
[C0 Master] Creating 6 HAL test tasks for parallel execution...
[C0 Master] Created HAL test task 3: 'CPU Local Move'
[C0 Master] HAL test task 3 'CPU Local Move' assigned to tile 3 (tile 0 reserved for C0 master)
[C0 Master] Created HAL test task 4: 'DMA Local Transfer'
[C0 Master] HAL test task 4 'DMA Local Transfer' assigned to tile 4 (tile 0 reserved for C0 master)
[C0 Master] Created HAL test task 5: 'DMA Remote Transfer'
[C0 Master] HAL test task 5 'DMA Remote Transfer' assigned to tile 5 (tile 0 reserved for C0 master)
[C0 Master] Created HAL test task 6: 'NoC Bandwidth'
[C0 Master] HAL test task 6 'NoC Bandwidth' assigned to tile 6 (tile 0 reserved for C0 master)
[C0 Master] Created HAL test task 7: 'NoC Latency'
[C0 Master] HAL test task 7 'NoC Latency' assigned to tile 7 (tile 0 reserved for C0 master)
[C0 Master] Created HAL test task 8: 'Random DMA Remote'
[C0 Master] HAL test task 8 'Random DMA Remote' assigned to tile 1 (tile 0 reserved for C0 master)
[C0 Master] Waiting for all 6 HAL test tasks to complete in parallel...
[C0 Master] Waiting for 6 HAL test tasks to complete (with interrupt processing)...
[Tile 7] Starting task 7 execution
=== [Tile 7] Starting NoC Latency - Print Session BEGIN ===
[Tile 7] Executing HAL test: NoC Latency
[HAL-FLOW] Tile 7: Test 'NoC Latency' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 7: Calling HAL test function for 'NoC Latency'
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x10000000, size=64)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x10000000 (size=64)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 64 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 64
[Perf] NoC latency (DMA remote): 16000 ns

[HAL-RESULT] Tile 7: HAL test 'NoC Latency' returned result: 1
[Tile 7] HAL test 'NoC Latency' completed with result: PASS
[Tile 7] Task 7 completed with result: 1
=== [Tile 7] NoC Latency Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 7 completed task 7 -> asserting IRQ_MESH_NODE
[Tile 7] Completed task 7 (result=1)
[Tile 4] Starting task 4 execution
[Tile 1] Starting task 8 execution
=== [Tile 4] Starting DMA Local Transfer - Print Session BEGIN ===
[Tile 4] Executing HAL test: DMA Local Transfer
[HAL-FLOW] Tile 4: Test 'DMA Local Transfer' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 4: Calling HAL test function for 'DMA Local Transfer'
[Tile 3] Starting task 3 execution

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;32mdma_local_transfer[0m                                                                ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[SRC-BEFORE]  Node1.DLM1_512 0xAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9 ...
[DST-BEFORE]  Node1.DLM1_512+256 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_local_transfer called by test 'DMA Local Transfer Test'
[DRIVER-CALL] DMA Local Transfer → DMAC512 HAL driver
[DMAC512-HAL] Tile 1: Configuring transfer (src=0x108000, dst=0x108100, size=256)
[DMAC512-HAL] Tile 1: Starting transfer...
[DMAC512-POST-HAL] Tile 1: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 1: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 1: Transfer 0x108000 -> 0x108100 (size=256)
[DMAC512-HW-SYNC] Tile 1: Memory copy completed successfully
[Device-DMAC512] Hart 1 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 1: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 1: Transfer completed successfully
[HAL-EXIT] hal_dma_local_transfer completed with result: 256
[SRC-AFTER ]  Node1.DLM1_512 0xAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9 ...
[DST-AFTER ]  Node1.DLM1_512+256 0xAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9 ...
[Test] DMA local transfer: PASS (HAL result: 256)

[HAL-RESULT] Tile 4: HAL test 'DMA Local Transfer' returned result: 1
[Tile 4] HAL test 'DMA Local Transfer' completed with result: PASS
[Tile 4] Task 4 completed with result: 1
=== [Tile 4] DMA Local Transfer Completed: PASS - Print Session END ===

[Tile 5] Starting task 5 execution
[Device-TaskComp] Hart 4 completed task 4 -> asserting IRQ_MESH_NODE
[Tile 4] Completed task 4 (result=1)
=== [Tile 5] Starting DMA Remote Transfer - Print Session BEGIN ===
[Tile 5] Executing HAL test: DMA Remote Transfer
[HAL-FLOW] Tile 5: Test 'DMA Remote Transfer' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 5: Calling HAL test function for 'DMA Remote Transfer'

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;32mdma_remote_transfer[0m                                                               ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[SRC-BEFORE]  Node2.DLM1_512 0x5A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879 ...
[DST-BEFORE]  DMEM5 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 2 DMAC512 for remote transfer
[DMAC512-HAL] Tile 2: Configuring remote transfer (src=0x208000, dst=0x20400000, size=256)
[DMAC512-HAL] Tile 2: Starting remote transfer...
[DMAC512-POST-HAL] Tile 2: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 2: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 2: Transfer 0x208000 -> 0x20400000 (size=256)
[DMAC512-HW-SYNC] Tile 2: Memory copy completed successfully
[Device-DMAC512] Hart 2 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 2: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 2: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[SRC-AFTER ]  Node2.DLM1_512 0x5A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879 ...
[DST-AFTER ]  DMEM5 0x5A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879 ...
[Test] DMA remote transfer: PASS (HAL result: 256)

[HAL-RESULT] Tile 5: HAL test 'DMA Remote Transfer' returned result: 1
[Tile 5] HAL test 'DMA Remote Transfer' completed with result: PASS
[Tile 5] Task 5 completed with result: 1
=== [Tile 5] DMA Remote Transfer Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 5 completed task 5 -> asserting IRQ_MESH_NODE
[Tile 5] Completed task 5 (result=1)
[Tile 6] Starting task 6 execution
=== [Tile 6] Starting NoC Bandwidth - Print Session BEGIN ===
[Tile 6] Executing HAL test: NoC Bandwidth
[HAL-FLOW] Tile 6: Test 'NoC Bandwidth' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 6: Calling HAL test function for 'NoC Bandwidth'
[HAL-ENTRY] hal_cpu_local_move called by test 'CPU Local Move Test'
[DRIVER-CALL] CPU Local Move → memory driver (memmove)
[HAL-EXIT] hal_cpu_local_move completed with result: 0
[Perf] CPU local move bandwidth: 1179.25 MB/s
[HAL-RESULT] Tile 6: HAL test 'NoC Bandwidth' returned result: 1
[Tile 6] HAL test 'NoC Bandwidth' completed with result: PASS
[Tile 6] Task 6 completed with result: 1
=== [Tile 6] NoC Bandwidth Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 6 completed task 6 -> asserting IRQ_MESH_NODE
[Tile 6] Completed task 6 (result=1)
=== [Tile 3] Starting CPU Local Move - Print Session BEGIN ===
[Tile 3] Executing HAL test: CPU Local Move
[HAL-FLOW] Tile 3: Test 'CPU Local Move' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 3: Calling HAL test function for 'CPU Local Move'

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;32mcpu_local_move[0m                                                                    ║
╚═══════════════════════════════════════════════════════════════════════════════════╝

[SRC-BEFORE] 0x55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_cpu_local_move called by test 'CPU Local Move Test'
[DRIVER-CALL] CPU Local Move → memory driver (memmove)
[HAL-EXIT] hal_cpu_local_move completed with result: 0
[SRC-AFTER ] 0x55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374 ...
[DST-AFTER ] 0x55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374 ...
[Test] CPU local move: PASS

[HAL-RESULT] Tile 3: HAL test 'CPU Local Move' returned result: 1
[Tile 3] HAL test 'CPU Local Move' completed with result: PASS
[Tile 3] Task 3 completed with result: 1
=== [Tile 3] CPU Local Move Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 3 completed task 3 -> asserting IRQ_MESH_NODE
[Tile 3] Completed task 3 (result=1)
=== [Tile 1] Starting Random DMA Remote - Print Session BEGIN ===
[Tile 1] Executing HAL test: Random DMA Remote
[HAL-FLOW] Tile 1: Test 'Random DMA Remote' → HAL 'hal_reference' → Driver 'hardware_driver'
[HAL-CALL] Tile 1: Calling HAL test function for 'Random DMA Remote'

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;35mrandom_dma_remote[0m                                                                 ║
╚═══════════════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m1. HAL transfer: node_0.dlm1(0x8000) -> dmem_5(0x20400000)[0m                          │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0xA5A4A7A6A1A0A3A2ADACAFAEA9A8ABAAB5B4B7B6B1B0B3B2BDBCBFBEB9B8BBBA ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 0 DMAC512 for remote transfer
[DMAC512-HAL] Tile 0: Configuring remote transfer (src=0x8000, dst=0x20400000, size=256)
[DMAC512-HAL] Tile 0: Starting remote transfer...
[DMAC512-POST-HAL] Tile 0: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 0: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 0: Transfer 0x8000 -> 0x20400000 (size=256)
[DMAC512-HW-SYNC] Tile 0: Memory copy completed successfully
[Device-DMAC512] Hart 0 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 0: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 0: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[SRC-AFTER ] 0xA5A4A7A6A1A0A3A2ADACAFAEA9A8ABAAB5B4B7B6B1B0B3B2BDBCBFBEB9B8BBBA ...
[DST-AFTER ] 0xA5A4A7A6A1A0A3A2ADACAFAEA9A8ABAAB5B4B7B6B1B0B3B2BDBCBFBEB9B8BBBA ...
HAL result: 256, Verify: PASS


┌─────────────────────────────────────────────────────────────────────────────────────┐
│ [1;33m2. HAL transfer: node_4.dlm1(0x408000) -> dmem_7(0x20c00000)[0m                        │
└─────────────────────────────────────────────────────────────────────────────────────┘
[SRC-BEFORE] 0x5A5B58595E5F5C5D52535051565754554A4B48494E4F4C4D4243404146474445 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[HAL-ENTRY] hal_dma_remote_transfer called by test 'DMA Remote Transfer Test'
[DRIVER-CALL] DMA Remote Transfer → DMAC512 HAL driver
[DMAC512-HAL] Using Tile 4 DMAC512 for remote transfer
[DMAC512-HAL] Tile 4: Configuring remote transfer (src=0x408000, dst=0x20C00000, size=256)
[DMAC512-HAL] Tile 4: Starting remote transfer...
[DMAC512-POST-HAL] Tile 4: HAL enabled DMA, executing transfer immediately
[DMAC512-HW-SYNC] Tile 4: DMA enable detected, executing transfer synchronously
[DMAC512-HW-SYNC] Tile 4: Transfer 0x408000 -> 0x20c00000 (size=256)
[DMAC512-HW-SYNC] Tile 4: Memory copy completed successfully
[Device-DMAC512] Hart 4 completed DMA transfer 256 -> asserting IRQ_DMA512
[DMAC512-HW-SYNC] Tile 4: DMA transfer completed synchronously, enable bit cleared
[DMAC512-HAL] Tile 4: Remote transfer completed successfully
[HAL-EXIT] hal_dma_remote_transfer completed with result: 256
[SRC-AFTER ] 0x5A5B58595E5F5C5D52535051565754554A4B48494E4F4C4D4243404146474445 ...
[DST-AFTER ] 0x5A5B58595E5F5C5D52535051565754554A4B48494E4F4C4D4243404146474445 ...
HAL result: 256, Verify: PASS

[1m[RndDMA] Summary: 2/2 passed[0m
[HAL-RESULT] Tile 1: HAL test 'Random DMA Remote' returned result: 1
[Tile 1] HAL test 'Random DMA Remote' completed with result: PASS
[Tile 1] Task 8 completed with result: 1
=== [Tile 1] Random DMA Remote Completed: PASS - Print Session END ===

[Device-TaskComp] Hart 1 completed task 8 -> asserting IRQ_MESH_NODE
[Tile 1] Completed task 8 (result=1)
[C0 Master] All 6 HAL test tasks completed!
[C0 Master] All parallel HAL test tasks completed!


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;36mDMAC512 COMPREHENSIVE HAL/DRIVER TESTS[0m                                            ║
╚═══════════════════════════════════════════════════════════════════════════════════╝


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 COMPREHENSIVE TEST SUITE[0m                                                  ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[SUITE] Running comprehensive DMAC512 HAL/Driver tests
[SUITE] Platform: 8 tiles, 8 DMEMs

[SUITE] === HANDLE MANAGEMENT TESTS ===

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Init - Valid Parameters[0m                                            ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512InitHandle with valid parameters
[TEST] Handle initialization: PASS
[TEST] Handle.Instance = 0x560ca8a53b50, Expected = 0x560ca8a53b50
[TEST] DMAC512 Handle Init Valid: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Init - Null Pointer Handling[0m                                       ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512InitHandle with null handle pointer
[TEST] Calling HAL_DMAC512InitHandle(NULL, 0x560ca8a53b50)
[TEST] Expected behavior: HAL should validate input parameters
[TEST] Current HAL implementation: No null pointer validation
[TEST] DMAC512 Handle Init Null Pointer: PASS (documented behavior)


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Init - Invalid Address[0m                                             ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512InitHandle with invalid register address
[TEST] Handle.Instance = 0xdeadbeef (invalid address stored)
[TEST] HAL behavior: Stores provided address without validation
[TEST] DMAC512 Handle Init Invalid Address: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Init - Multiple Tiles[0m                                              ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512InitHandle across multiple tiles
[TEST] Tile 0 handle init: PASS
[TEST] Tile 1 handle init: PASS
[TEST] Tile 2 handle init: PASS
[TEST] Tile 3 handle init: PASS
[TEST] Multiple tiles initialized: 4/4
[TEST] DMAC512 Handle Multiple Tiles: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Reinitialization[0m                                                   ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing handle reinitialization with different register addresses
[TEST] First initialization (tile 0): PASS
[TEST] Reinitialization (tile 1): PASS
[TEST] Handle correctly updated: PASS
[TEST] DMAC512 Handle Reinitialization: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Handle Concurrent Access[0m                                                  ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing concurrent handle operations on different tiles
[TEST] Handle 1 (tile 0): PASS
[TEST] Handle 2 (tile 1): PASS
[TEST] Handles point to different registers: PASS
[TEST] DMAC512 Handle Concurrent Access: PASS


[SUITE] === CONFIGURATION TESTS ===

╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Basic Transfer[0m                                                   ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with basic parameters
[TEST] Configuration: src=0x8000, dst=0x8200, count=256
[TEST] HAL_DMAC512ConfigureChannel result: 0
[TEST] Source address in register: PASS
[TEST] Destination address in register: PASS
[TEST] Transfer count in register: PASS
[TEST] DMAC512 Config Basic Transfer: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Different Beat Modes[0m                                             ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with different beat modes
[TEST] Testing beat mode 0 (DOB=0, DFB=0)
[TEST] Beat mode 0 configuration: PASS
[TEST] Testing beat mode 1 (DOB=1, DFB=1)
[TEST] Beat mode 1 configuration: PASS
[TEST] Testing beat mode 2 (DOB=2, DFB=2)
[TEST] Beat mode 2 configuration: PASS
[TEST] Testing beat mode 3 (DOB=3, DFB=3)
[TEST] Beat mode 3 configuration: PASS
[TEST] Testing beat mode 4 (DOB=4, DFB=4)
[TEST] Beat mode 4 configuration: PASS
[TEST] Testing beat mode 5 (DOB=5, DFB=5)
[TEST] Beat mode 5 configuration: PASS
[TEST] Beat modes tested: 6/6 passed
[TEST] DMAC512 Config Different Beat Modes: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Normal Mode[0m                                                      ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with normal mode
[TEST] Configuration: DMAC512_NORMAL_MODE = 0
[TEST] HAL_DMAC512ConfigureChannel result: 0
[TEST] Control register mode: 0 (expected 0)
[TEST] Mode configuration: PASS
[TEST] DMAC512 Config Normal Mode: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Zero Transfer Count[0m                                              ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with zero transfer count
[TEST] Configuration: XferCount = 0
[TEST] HAL_DMAC512ConfigureChannel result: 0
[TEST] Transfer count in register: 0 (expected 0)
[TEST] Zero count configuration: PASS
[TEST] DMAC512 Config Zero Transfer Count: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Max Transfer Count[0m                                               ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with maximum transfer count
[TEST] Configuration: XferCount = 16777215 (max)
[TEST] HAL_DMAC512ConfigureChannel result: 0
[TEST] Transfer count in register: 16777215 (expected 16777215)
[TEST] Max count configuration: PASS
[TEST] DMAC512 Config Max Transfer Count: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Null Handle[0m                                                      ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel with null handle
[TEST] HAL_DMAC512ConfigureChannel(NULL) result: -1
[TEST] Null handle error handling: PASS
[TEST] DMAC512 Config Null Handle: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Sequential Configurations[0m                                        ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing multiple sequential HAL_DMAC512ConfigureChannel calls
[TEST] Config 1: src=0x8000, dst=0x8200, count=256
[TEST] Config 1 verification: PASS
[TEST] Config 2: src=0x8400, dst=0x8600, count=512
[TEST] Config 2 verification: PASS
[TEST] Config 3: src=0x8800, dst=0x8A00, count=128
[TEST] Config 3 verification: PASS
[TEST] Sequential configurations: 3/3 passed
[TEST] DMAC512 Config Sequential Configs: PASS


╔═══════════════════════════════════════════════════════════════════════════════════╗
║ [1;33mDMAC512 Config - Parameter Validation[0m                                             ║
╚═══════════════════════════════════════════════════════════════════════════════════╝
[TEST] Testing HAL_DMAC512ConfigureChannel parameter validation
[TEST] Valid configuration: PASS
timeout: the monitored command dumped core
