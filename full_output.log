[Platform Setup] Enhanced with threading and task system (Step 2)

== Mesh‑NoC HAL Validation (Step 2: Task Coordination) ==
[Debug] Log segregation system initialized - check debug_*.log files
[C0 Master] Starting tile processor threads...
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[Task Queue] Initialized with 64 task slots
[C0 Master] Created worker thread for Tile 1
[Tile 1] Starting processor thread...
[C0 Master] Created worker thread for Tile 2
[Tile 2] Starting processor thread...
[C0 Master] Created worker thread for Tile 3
[Tile 3] Starting processor thread...
[C0 Master] Created worker thread for Tile 4
[Tile 4] Starting processor thread...
[C0 Master] Created worker thread for Tile 5
[Tile 5] Starting processor thread...
[C0 Master] Created worker thread for Tile 6
[Tile 6] Starting processor thread...
[C0 Master] Created worker thread for Tile 7
[C0 Master] Tile 0 reserved for C0 master hardware access
[C0 Master] Waiting for worker tile threads to initialize...
[Tile 7] Starting processor thread...
[C0 Master] All worker tile threads (1-7) initialized successfully!
[C0 Master] Task coordination system ready
[C0 Master] Platform running with tile processors and task system!

[C0 Master] === UNIFIED: Real HAL Tests with C0 Segregation ===
[C0 Master] Processing 8 HAL tests (segregating C0 tasks)...
[C0 Master] === Phase 1: C0-Exclusive Tasks (Main Thread) ===
[C0 Master] Executing C0-exclusive task locally: C0 Gather
################################
# C0-Gather(collect 8 DMEM to a continue DLM1)
################################
1. HAL transfer: dmem_0(0x10000000) -> node_0.dlm1+0(0x8000)
[SRC-BEFORE] 0x101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F ...
HAL result: 256

2. HAL transfer: dmem_1(0x10400000) -> node_0.dlm1+256(0x8100)
[SRC-BEFORE] 0x1112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x1112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30 ...
HAL result: 256

3. HAL transfer: dmem_2(0x10800000) -> node_0.dlm1+512(0x8200)
[SRC-BEFORE] 0x12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031 ...
HAL result: 256

4. HAL transfer: dmem_3(0x10c00000) -> node_0.dlm1+768(0x8300)
[SRC-BEFORE] 0x131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132 ...
HAL result: 256

5. HAL transfer: dmem_4(0x20000000) -> node_0.dlm1+1024(0x8400)
[SRC-BEFORE] 0x1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233 ...
HAL result: 256

6. HAL transfer: dmem_5(0x20400000) -> node_0.dlm1+1280(0x8500)
[SRC-BEFORE] 0x15161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x15161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334 ...
HAL result: 256

7. HAL transfer: dmem_6(0x20800000) -> node_0.dlm1+1536(0x8600)
[SRC-BEFORE] 0x161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435 ...
HAL result: 256

8. HAL transfer: dmem_7(0x20c00000) -> node_0.dlm1+1792(0x8700)
[SRC-BEFORE] 0x1718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536 ...
[DST-BEFORE] 0x0000000000000000000000000000000000000000000000000000000000000000 ...
[DST-AFTER ] 0x1718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536 ...
HAL result: 256

[C0-Gather] Summary: 8/8 passed

[C0 Master] C0-exclusive task 'C0 Gather' completed with result: PASS
[C0 Master] Executing C0-exclusive task locally: C0 Distribute
################################
# C0-Distribute(same SRC --> diff. Dist)
################################
1. HAL transfer: node_0.dlm1(0x8000) -> dmem_0(0x10000000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

2. HAL transfer: node_0.dlm1(0x8000) -> dmem_1(0x10400000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

3. HAL transfer: node_0.dlm1(0x8000) -> dmem_2(0x10800000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

4. HAL transfer: node_0.dlm1(0x8000) -> dmem_3(0x10c00000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

5. HAL transfer: node_0.dlm1(0x8000) -> dmem_4(0x20000000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

6. HAL transfer: node_0.dlm1(0x8000) -> dmem_5(0x20400000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

7. HAL transfer: node_0.dlm1(0x8000) -> dmem_6(0x20800000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

8. HAL transfer: node_0.dlm1(0x8000) -> dmem_7(0x20c00000), size: 256
[SRC-BEFORE] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
[DST-AFTER ] 0xE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF ...
HAL result: 256

[C0-Distribute] Summary: 8/8 passed

[C0 Master] C0-exclusive task 'C0 Distribute' completed with result: PASS
[C0 Master] === Phase 2: Distributed Tasks (Worker Tiles) ===
[C0 Master] Created distributed HAL test task: CPU Local Move → Tile 2 (skipping C0's Tile 0)
[C0 Master] Created distributed HAL test task: DMA Local Transfer → Tile 3 (skipping C0's Tile 0)
[C0 Master] Created distributed HAL test task: DMA Remote Transfer → Tile 4 (skipping C0's Tile 0)
[C0 Master] Created distributed HAL test task: NoC Bandwidth → Tile 5 (skipping C0's Tile 0)
[C0 Master] Created distributed HAL test task: NoC Latency → Tile 6 (skipping C0's Tile 0)
[C0 Master] Created distributed HAL test task: Random DMA Remote → Tile 7 (skipping C0's Tile 0)
[C0 Master] Distributing 6 tasks to worker tiles...
[Task Queue] Pushed task 1 (type 5) for tile 2, queue size: 1
[C0 Master] Task 1 successfully queued to tile 2's dedicated queue
[C0 Master] HAL test 'CPU Local Move' queued successfully
[Task Queue] Pushed task 2 (type 5) for tile 3, queue size: 1
[C0 Master] Task 2 successfully queued to tile 3's dedicated queue
[C0 Master] HAL test 'DMA Local Transfer' queued successfully
[Task Queue] Pushed task 3 (type 5) for tile 4, queue size: 1
[C0 Master] Task 3 successfully queued to tile 4's dedicated queue
[C0 Master] HAL test 'DMA Remote Transfer' queued successfully
[Task Quetimeout: the monitored command dumped core
